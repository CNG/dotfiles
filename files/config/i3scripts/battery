#!/usr/bin/perl
#
# Copyright 2014 Pierre Mavro <deimos@deimos.fr>
# Copyright 2014 Vivien Didelot <vivien@didelot.org>
# Copyright 2017 Andrea Gomez <hi@daedra.ml>
# Modified 2018 Charlie Gorichanaz @CNG
#
# Licensed under the terms of the GNU GPL v3, or any later version.
#
# This script is meant to use with i3blocks. It reads /sys/class/power_supply
# to calculate battery level and state.
#
# The color will gradually change for a percentage below 100%, 85%, 60%, 40%,
# 20% as well as the icons using FontAwesomeand.
#
# The urgency (exit code 33) is set if there is less that 5% remaining.

use strict;
use warnings;
use utf8;
binmode(STDOUT, ':utf8');

my $laptop = system("bash -c 'ls /sys/class/power_supply/BAT* &> /dev/null'");
if($laptop != 0){
  exit(0);
}

# Some kernel versions provide energy_full and others charge_full
my $measure = "energy";
my $measure_test = system("bash -c 'ls /sys/class/power_supply/BAT*/${measure}_full &> /dev/null'");
if($measure_test != 0){
  $measure = "charge";
  $measure_test = system("bash -c 'ls /sys/class/power_supply/BAT*/${measure}_full &> /dev/null'");
  if($measure_test != 0){
    exit(0);
  }
}


my $energy_full;
my $energy_now;
my $status;
my $percent;
my $full_text;
my $short_text;



# Sum the energy_full for all batteries
open (CAT, qq[bash -c 'ls /sys/class/power_supply/BAT*/${measure}_full | xargs awk '"'"'{s+=\$1} END {print s}'"'" |]) or die;
$energy_full = <CAT>;

close(CAT);
# Sum the energy_now for all batteries
open (CAT, qq[bash -c 'ls /sys/class/power_supply/BAT*/${measure}_now | xargs awk '"'"'{s+=\$1} END {print s}'"'" |]) or die;
$energy_now = <CAT>;
close(CAT);
# Sort of get the status, favoring charging over discharging over unknown by order
open (CAT, "bash -c 'ls /sys/class/power_supply/BAT*/status | xargs cat | sort | head -n1 | tr -d \\\\n' |") or die;
$status = <CAT>;
close(CAT);

$percent = $energy_now * 100 / $energy_full;

# Display different icons for battery status
if ($status eq 'Discharging') {
    if ($percent < 20) {
        $full_text .= "\x{f244}";
    } elsif ($percent < 40) {
        $full_text .= "\x{f243}";
    } elsif ($percent < 60) {
        $full_text .= "\x{f242}";
    } elsif ($percent < 85) {
        $full_text .= "\x{f241}";
    } elsif ($percent <= 100) {
        $full_text .= "\x{f240}";
    }
} elsif ($status eq 'Charging') {
    $full_text .= "\x{f1e6}";
} elsif ($status eq 'Unknown') {
    $full_text .= "\x{f1e6}";
} else {
    $full_text .= "\x{f1e6}";
}

$short_text = $full_text;
if ($percent == 100) {
    $full_text .= sprintf(" %.0f", $percent);
} else {
    $full_text .= sprintf(" %.1f", $percent);
}

# Print text
print "$full_text\n";
print "$short_text\n";

# Use a different colour for battery status
if ($status eq 'Discharging') {
    if ($percent < 20) {
        print "#f77b71\n";
    } elsif ($percent < 40) {
        print "#ef6191\n";
    } elsif ($percent < 60) {
        print "#b967c7\n";
    } elsif ($percent < 85) {
        print "#7884cb\n";
    } elsif ($percent <= 100) {
        print "#4ec2f7\n";
    } elsif ($percent < 5) {
        exit(33);
    }
}

else {
    print "#ffb64c\n";
}

exit(0);
