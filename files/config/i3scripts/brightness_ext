#!/bin/bash

# This allows controlling the brightness of external monitors.

#MFG="GSM"
#MODEL="LG UltraFine"

#MFG="DEL"
#MODEL="DELL P2415Q"

MODEL=${1:-}
# 10 is brightness; 12 is contrast, which Dell panel supports
VCP=${2:-10}

detect_display () {
  if [[ $MODEL ]]; then
    if ! ddcutil --async detect | grep "$MODEL" > /dev/null; then
      exit
    fi
  fi
}

level () {
  if [[ $MODEL ]]; then
    printf "%.0f" $(ddcutil --async --model "$MODEL" getvcp $VCP -t | cut -d' ' -f4)
  elif [[ $MFG ]]; then
    printf "%.0f" $(ddcutil --async --mfg "$MFG" getvcp $VCP -t | cut -d' ' -f4)
  else
    printf "%.0f" $(ddcutil --async --display 1 getvcp $VCP -t | cut -d' ' -f4)
  fi
}

lower () {
  if (($1 <= 5)); then
    amount=1
  elif (($1 <= 20)); then
    amount=5
  else
    amount=10
  fi
  printf "%s" $(($1 - $amount))
}

raise () {
  if (($1 >= 20)); then
    amount=10
  elif (($1 >= 5)); then
    amount=5
  else
    amount=1
  fi
  printf "%s" $(($1 + $amount))
}

case $BLOCK_BUTTON in
  1) new=100 ;;  # left click
  3) new=0   ;;  # right click
  4) new=$(raise $(level)) ;;  # scroll up
  5) new=$(lower $(level)) ;;  # scroll down
  *) detect_display ;;  # see if we can exit early
esac

if [[ -z $new ]] || (( $new > 100 )); then
  num_displays=$(xrandr | grep " connected" | wc -l)
  if [[ $num_displays -gt 1 ]]; then
    level
  fi
else
  printf "%s" $new
  if [[ $MODEL ]]; then
    ddcutil --async --noverify --model "$MODEL" setvcp $VCP $new &
  elif [[ $MFG ]]; then
    ddcutil --async --noverify --mfg "$MFG" setvcp $VCP $new &
  else
    ddcutil --async --noverify --display 1 setvcp $VCP $new &
  fi
fi
