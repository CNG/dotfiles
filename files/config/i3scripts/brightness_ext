#!/bin/bash

# This allows controlling the brightness of external monitors.

#MFG="GSM"
#MODEL="LG UltraFine"

#MFG="DEL"
#MODEL="DELL P2415Q"

MODEL=${1:-}
# 10 is brightness; 12 is contrast, which Dell panel supports
VCP=${2:-10}

logger () {
  echo "$@" | systemd-cat -t $(basename $0)
}

detect_display () {
  if [[ $MODEL ]]; then
    if ! ddcutil --async detect | grep "$MODEL" > /dev/null; then
      # logger "detect_display did not find ${MODEL} in $(ddcutil --async detect)\n\n"
      exit
    fi
  fi
}

level () {
  local value
  if [[ $MODEL ]]; then
    value=$(ddcutil --async --model "$MODEL" getvcp $VCP -t | cut -d' ' -f4)
  elif [[ $MFG ]]; then
    value=$(ddcutil --async --mfg "$MFG" getvcp $VCP -t | cut -d' ' -f4)
  else
    value=$(ddcutil --async --display 1 getvcp $VCP -t | cut -d' ' -f4)
  fi
  printf " %.0f\n" $value
}

lower () {
  if (($1 <= 5)); then
    amount=1
  elif (($1 <= 20)); then
    amount=5
  else
    if [[ $VCP == 12 ]]; then
      # 10 is too much for contrast
      amount=5
    else
      amount=10
    fi
  fi
  printf "%s" $(($1 - $amount))
}

raise () {
  if (($1 >= 20)); then
    if [[ $VCP == 12 ]]; then
      amount=5
    else
      amount=10
    fi
  elif (($1 >= 5)); then
    amount=5
  else
    amount=1
  fi
  printf "%s" $(($1 + $amount))
}

case $BLOCK_BUTTON in
  1) new=100 ;;  # left click
  3) new=0   ;;  # right click
  5) new=$(raise $(level)) ;;  # scroll up
  4) new=$(lower $(level)) ;;  # scroll down
  *) detect_display ;;  # see if we can exit early
esac

if [[ -z $new ]]; then
  # just show current setting
  num_displays=$(xrandr | grep " connected" | wc -l)
  if [[ $num_displays -gt 0 ]]; then
  # if [[ $num_displays -gt 1 ]]; then
    level
  fi
else
  # or we are changing the setting
  if (( $new > 100 )); then
    new=100
  fi
  printf " %s\n" $new
  if [[ $MODEL ]]; then
    ddcutil --async --noverify --model "$MODEL" setvcp $VCP $new &
  elif [[ $MFG ]]; then
    ddcutil --async --noverify --mfg "$MFG" setvcp $VCP $new &
  else
    ddcutil --async --noverify --display 1 setvcp $VCP $new &
  fi
fi
