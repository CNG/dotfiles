#!/usr/bin/env bash
set -o errexit

# Top level manager for @CNG's system configuration scripts

# Script location determination accounting for symlinked script name
# http://stackoverflow.com/a/246128/172602
SOURCE="${BASH_SOURCE[0]}"
while [[ -h "$SOURCE" ]]; do # resolve $SOURCE until the file is no longer a symlink
  DIR="$( cd -P "$( dirname "$SOURCE" )" && pwd )"
  SOURCE="$(readlink "$SOURCE")"
  [[ $SOURCE != /* ]] && SOURCE="$DIR/$SOURCE" # if $SOURCE was a relative symlink, we need to resolve it relative to the path where the symlink file was located
done
APP_ROOT="$( cd -P "$( dirname "$SOURCE" )" && pwd )"

err_report () {
  echo "Error on line $1"
}

main () {
  trap 'err_report $LINENO' ERR
  cd "$APP_ROOT"

  if ! pacman -Qi ansible > /dev/null; then
    sudo pacman -Sy --noconfirm python-passlib ansible git
  fi

  cd ansible
  git submodule init && git submodule update || true # TODO: ignore submodule issue

  if [[ ! -f library/ansible-aur/aur.py ]]; then
    git clone https://github.com/kewlfft/ansible-aur.git library/ansible-aur
  fi
  ln -fs ansible-aur/aur.py library/aur

  sudo ansible-galaxy install -r requirements.yml
  # ansible-playbook -i local -K playbook.yml "$@"
  sudo ansible-playbook -i $(hostname), -c local playbook.yml "$@"

  trap - ERR
}

( main "$@" )
