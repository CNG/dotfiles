#!/usr/bin/env bash
set -o errexit

# Top level manager for @CNG's system configuration scripts

# Script location determination accounting for symlinked script name
# http://stackoverflow.com/a/246128/172602
SOURCE="${BASH_SOURCE[0]}"
while [[ -h "$SOURCE" ]]; do # resolve $SOURCE until the file is no longer a symlink
  DIR="$( cd -P "$( dirname "$SOURCE" )" && pwd )"
  SOURCE="$(readlink "$SOURCE")"
  [[ $SOURCE != /* ]] && SOURCE="$DIR/$SOURCE" # if $SOURCE was a relative symlink, we need to resolve it relative to the path where the symlink file was located
done
APP_ROOT="$( cd -P "$( dirname "$SOURCE" )" && pwd )"

err_report () {
  echo "Error on line $1"
}

main () {
  trap 'err_report $LINENO' ERR
  cd "$APP_ROOT"

  if ! which ansible > /dev/null; then
    sudo apt install ansible git
  fi

  cd ansible

  printf "Starting Ansible playbook\n"
  # sudo ansible-playbook -i local -K playbook.yml "$@"
  dense=/usr/lib/python3.7/site-packages/ansible/plugins/callback/dense.py
  if [[ -f $dense ]]; then
    sudo sed -i 's/name + vt100.reset/self.task.get_name() + vt100.reset/' "$dense"
  fi
  sudo ansible-playbook -i $(cat /etc/hostname), -c local playbook.yml --diff "$@"

  trap - ERR
}

( main "$@" )
