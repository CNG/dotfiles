#!/usr/bin/env bash
set -o errexit

# Top level manager for @CNG's system configuration scripts

# Script location determination accounting for symlinked script name
# http://stackoverflow.com/a/246128/172602
SOURCE="${BASH_SOURCE[0]}"
while [[ -h "$SOURCE" ]]; do # resolve $SOURCE until the file is no longer a symlink
  DIR="$( cd -P "$( dirname "$SOURCE" )" && pwd )"
  SOURCE="$(readlink "$SOURCE")"
  [[ $SOURCE != /* ]] && SOURCE="$DIR/$SOURCE" # if $SOURCE was a relative symlink, we need to resolve it relative to the path where the symlink file was located
done
APP_ROOT="$( cd -P "$( dirname "$SOURCE" )" && pwd )"

err_report () {
  echo "Error on line $1"
}

main () {
  trap 'err_report $LINENO' ERR
  cd "$APP_ROOT"

  if ! pacman -Qi ansible > /dev/null; then
    sudo pacman -Sy --noconfirm python-passlib ansible git
  fi

  # Locally install aur module for easier references in modules
  # https://github.com/kewlfft/ansible-aur?tab=readme-ov-file#install-the-aur-module-as-a-local-custom-module
  if [[ ! -f ~/.ansible/plugins/modules/aur.py ]]; then
    # Create the user custom module directory
    mkdir -p ~/.ansible/plugins/modules
    # Install the aur module into the user custom module directory
    curl -o ~/.ansible/plugins/modules/aur.py https://raw.githubusercontent.com/kewlfft/ansible-aur/master/plugins/modules/aur.py
  fi

  cd ansible
  # git submodule init && git submodule update || true # TODO: ignore submodule issue

  printf "Starting Ansible playbook\n"
  # sudo ansible-playbook -i local -K playbook.yml "$@"
  # dense=/usr/lib/python3.7/site-packages/ansible/plugins/callback/dense.py
  # if [[ -f $dense ]]; then
  #   sudo sed -i 's/name + vt100.reset/self.task.get_name() + vt100.reset/' "$dense"
  # fi
  sudo ansible-playbook -i $(cat /etc/hostname), -c local playbook.yml --diff "$@"

  trap - ERR
}

( main "$@" )
