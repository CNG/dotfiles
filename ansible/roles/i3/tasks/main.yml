---
- name: Install i3 tiling window manager
  aur:
    name: "{{ item }}"
  become: yes
  become_user: aur_builder
  with_flattened:
    - i3-gaps
    - i3blocks
    - i3lock-color-git
    - rofi  # menu
    - playerctl  # media player controls
    - qt5ct  # https://wiki.archlinux.org/index.php/Qt#Configuration_of_Qt5_apps_under_environments_other_than_KDE_Plasma
    - picom
    - xbindkeys
    - xdotool  # for emulating 60% keyboard in i3 config
    - [ escrotum-git, python2-numpy ] # screenshots
    - breeze-gtk  # need to check if this gets what i want
    - acpilight  # provides xbacklight
    - pacman-contrib  # required for arch-update.py i3block

- name: Verify header in default applications file
  lineinfile:
    dest: /etc/xdg/mimeapps.list
    state: present
    line: '[Default Applications]'
    insertbefore: BOF
    create: yes

- name: Install i3blocks-contrib scripts
  git:
    repo: "git://github.com/vivien/i3blocks-contrib.git"
    dest: "/home/{{ user.name }}/.config/i3blocks-contrib"
    update: yes
    accept_hostkey: yes
  become: yes
  become_user: "{{ user.name }}"

# https://github.com/vivien/i3blocks-contrib/tree/master/usb
- name: Configure USB reload script for i3blocks
  copy:
    src: 70-persistent-usb.rules
    dest: /etc/udev/rules.d/70-persistent-usb.rules
- name: udevadm control --reload-rules
  command: "udevadm control --reload-rules"
  become: yes
  changed_when: False

- name: Create kbdrate service
  copy:
    src: kbdrate.service
    dest: /etc/systemd/system/kbdrate.service

- name: Enable and start kbdrate service
  service:
    name: kbdrate.service
    enabled: yes
    state: started

- name: Install audio stream mover
  copy:
    src: streams_to_sink
    dest: "/usr/local/bin/streams_to_sink"
    mode: 0755

- name: Install screen switching script
  copy:
    src: monitor_switch
    dest: "/usr/local/bin/monitor_switch"
    mode: 0755

- name: Install screen mirroring
  copy:
    src: monitor_mirror
    dest: "/usr/local/bin/monitor_mirror"
    mode: 0755

- name: Install display-setup-script for X login
  copy:
    src: display-setup-script
    dest: "/usr/local/bin/display-setup-script"
    mode: 0755

- name: Push i3lock authentication file
  template:
    src: pam.d/i3lock.j2
    dest: /etc/pam.d/i3lock

- name: Autounlock keyring on login 1a
  lineinfile:
    dest: /etc/pam.d/lightdm
    state: present
    regexp: "auth.*pam_gnome_keyring.so"
    line: "auth        optional    pam_gnome_keyring.so"
- name: Autounlock keyring on login 1b
  lineinfile:
    dest: /etc/pam.d/lightdm
    state: present
    regexp: "session.*pam_gnome_keyring.so"
    line: "session     optional    pam_gnome_keyring.so auto_start"
- name: Autounlock keyring on login 2
  lineinfile:
    dest: /etc/pam.d/passwd
    state: present
    line: "password	optional	pam_gnome_keyring.so"
    create: no

# Configure Samba
- name: Copy Samba config
#   copy:
#     src: smb.conf
  blockinfile:
    dest: /etc/samba/smb.conf
    state: present
    block: |
      usershare path = /var/lib/samba/usershares
      usershare max shares = 100
      usershare allow guests = yes
      usershare owner only = yes
    create: yes
    insertafter: '^[global]'
- name: This creates the group sambashare
  group:
    name: "sambashare"
    state: present
- name: This creates the usershares directory in /var/lib/samba
  file:
    path: /var/lib/samba/usershares
    state: directory
    owner: 0
    group: sambashare
    mode: 01770
- name: Add your user to the sambashare group
  user:
    name: "{{ user.name }}"
    groups: sambashare
    append: yes



# Restart smb.service and nmb.service services.

# Log out and log back in. You should now be able to configure your samba share using GUI. For example, in Thunar you can right click on any directory and share it on the network. If you want to share paths inside your home directory you must make it listable for the group others.
# Adding a user

# Samba requires a Linux user account - you may use an existing user account or create a new one.

# Although the user name is shared with Linux system, Samba uses a password separate from that of the Linux user accounts. Replace samba_user with the chosen Samba user account:

# # smbpasswd -a samba_user

# Depending on the server role, existing File permissions and attributes may need to be altered for the Samba user account.

# If you want the new user only to be allowed to remotely access the file server shares through Samba, you can restrict other login optionsï¼š

#     disabling shell - usermod --shell /usr/bin/nologin --lock username
#     disabling SSH logons - edit /etc/ssh/sshd_conf, change option AllowUsers

# Also see Security for hardening your system.
# Listing users

# Samba users can be listed using the pdbedit(8) command:

# # pdbedit -L -v

# Changing Samba user's password

# To change a user's password, use smbpasswd:

# # smbpasswd samba_user
